// Code generated by protoc-gen-go-short-enum. DO NOT EDIT.

package testpb

import (
	driver "database/sql/driver"
	fmt "fmt"
)

// BarStatus
const (
	BarStatus_UNSPECIFIED BarStatus = 0
	BarStatus_ACTIVE      BarStatus = 1
	BarStatus_DELETED     BarStatus = 2
)

var (
	BarStatus_name_short = map[int32]string{
		0: "UNSPECIFIED",
		1: "ACTIVE",
		2: "DELETED",
	}
	BarStatus_value_short = map[string]int32{
		"UNSPECIFIED": 0,
		"ACTIVE":      1,
		"DELETED":     2,
	}
	BarStatus_value_either = map[string]int32{
		"UNSPECIFIED":            0,
		"BAR_STATUS_UNSPECIFIED": 0,
		"ACTIVE":                 1,
		"BAR_STATUS_ACTIVE":      1,
		"DELETED":                2,
		"BAR_STATUS_DELETED":     2,
	}
)

func (x BarStatus) ShortString() string {
	return BarStatus_name_short[int32(x)]
}
func (x BarStatus) Value() (driver.Value, error) {
	return []uint8(x.ShortString()), nil
}
func (x *BarStatus) Scan(value interface{}) error {
	var strVal string
	switch vt := value.(type) {
	case []uint8:
		strVal = string(vt)
	case string:
		strVal = vt
	default:
		return fmt.Errorf("Invalid type %T", value)
	}
	val := BarStatus_value_either[strVal]
	*x = BarStatus(val)
	return nil
}
